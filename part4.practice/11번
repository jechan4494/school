#include <iostream> 
#include <string> 
using namespace std; 


class container {
    int size; // 재료의 크기를 나타내는 멤버 변수
public:
    // 재료를 채우는 메서드
    void fill() {
        size = 10; // 재료를 10 채운다.
    }
    // 용기에서 소비하는 메서드
    void consume() {
        size--; // 용기에서 재료의 크기를 하나 감소시킨다.
    }
    // 용기에서 재료의 크기를 반환하는 메서드
    int getSize() {
        return size; // 용기의 크기를 반환한다.
    }
};

// 커피 자판기 클래스
class CoffeeMachine {
    container tong[3]; // 커피, 물, 설탕을 담는 용기 배열

public:
    // 에스프레소 선택 메서드
    void selectEspresso();
    // 아메리카노 선택 메서드
    void selectAmericano();
    // 설탕커피 선택 메서드
    void selectSugercoffee();
    // 용기 채우는 메서드
    void fill();
    // 현재 상태 출력 메서드
    void show();
    // 자판기 작동 메서드
    void run();
};

// 에스프레소 선택 메서드 구현
void CoffeeMachine::selectEspresso() {
    tong[0].consume(); // 커피 용기에서 소비한다.
    tong[1].consume(); // 물 용기에서 소비한다.
}

// 아메리카노 선택 메서드 구현
void CoffeeMachine::selectAmericano() {
    tong[0].consume(); // 커피 용기에서 소비한다.
    tong[1].consume(); // 물 용기에서 소비한다.
    tong[1].consume(); // 물 용기에서 소비한다.
}

// 설탕커피 선택 메서드 구현
void CoffeeMachine::selectSugercoffee() {
    tong[0].consume(); // 커피 용기에서 소비한다.
    tong[1].consume(); // 물 용기에서 소비한다.
    tong[1].consume(); // 물 용기에서 소비한다.
    tong[2].consume(); // 설탕 용기에서 소비한다.
}

// 용기 채우는 메서드 구현
void CoffeeMachine::fill() {
    for (int i = 0; i < 3; i++) {
        tong[i].fill(); // 각 용기를 채운다.
    }
    show(); // 현재 상태를 출력한다.
}

// 현재 상태 출력 메서드 구현
void CoffeeMachine::show() {
    cout << "커피: " << tong[0].getSize() << " 물: " << tong[1].getSize() << " 설탕: " << tong[2].getSize() << endl; // 커피, 물, 설탕 용기의 크기를 출력한다.
}

// 자판기 작동 메서드 구현
void CoffeeMachine::run() {
    cout << "***** 커피자판기를 작동합니다. ******\n";

    while (true) {
        int menu;
        cout << "\n메뉴를 눌러주세요 (1: 에스프레소, 2: 아메리카노, 3: 설탕커피, 4: 잔량보기, 5: 채우기) >> ";
        cin >> menu; // 메뉴를 입력받는다.
        if (menu == 1) {
            if (tong[0].getSize() == 0 && tong[1].getSize() == 0)
                cout << "재료가 없습니다."; // 커피와 물이 모두 소진된 경우 메시지를 출력한다.
            else
                selectEspresso(); // 에스프레소를 선택한다.
        }
        if (menu == 2) {
            if (tong[0].getSize() == 0 && tong[1].getSize() <= 1)
                cout << "재료가 없습니다."; // 커피 또는 물이 모두 소진된 경우 메시지를 출력한다.
            else
                selectAmericano(); // 아메리카노를 선택한다.
        }
        if (menu == 3) {
            if (tong[0].getSize() == 0 && tong[1].getSize() <= 1 && tong[2].getSize() == 0)
                cout << "재료가 없습니다."; // 커피, 물, 설탕이 모두 소진된 경우 메시지를 출력한다.
            else
                selectSugercoffee(); // 설탕커피를 선택한다.
        }
        if (menu == 4) {
            show(); // 현재 상태를 출력한다.
        }
        if (menu == 5) {
            fill(); // 용기를 채운다.
        }
    }
}

// 메인 함수
int main() {
    CoffeeMachine r; // CoffeeMachine 객체 생성
    r.run(); // 자판기 작동 메서드 호출
    return 0; // 프로그램 종료
}
